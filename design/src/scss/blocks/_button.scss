.button {
	display: inline-block;
	padding: 0.5rem 1rem 0.5rem 2rem;
	border: $stroke-width solid get-color("slate");
	color: get-color("light");
	font: inherit;
	font-size: get-size("400");
	line-height: 1;
	text-decoration: none;
	text-align: center;
	text-transform: uppercase;

	cursor: pointer;
	border-radius: 1rem;

	@include apply-utility("weight", "black");

	/// Only applies background where utility is not present
	&:not([class*="bg-"]) {
		background: get-color("primary");
	}

	/// We absolutely want this hover state *regardless* of what
	/// tokens are present at any given time. This is to ensure consistency
	&:hover {
		background: get-color("light") !important;
		border-color: get-color("dark") !important;
		color: get-color("primary") !important;
	}

	&:focus:not(:hover) {
		outline: none;
		outline-offset: -10px;
		border-color: get-color("tertiary");
	}

	&:hover:focus {
		outline: 1px solid get-color("light");
		outline-offset: 1px;
	}

	&:active {
		transform: scale(0.99);
	}

	/// Size exeptions
	&[data-size="large"] {
		font-size: get-size("700");
	}
}
/*START: LAST ITEMS FROM TEMPLATE*/
// Active filters
button.active {
	background-color: #ddd;
}
// Filters with no current filtered results
button.disable-button {
	border-style: dashed;
}
/*END: LAST ITEMS FROM TEMPLATE*/
